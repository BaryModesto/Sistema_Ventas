<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>